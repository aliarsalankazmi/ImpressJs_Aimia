req_data <- invoke_map(.f = req_config$probDist, .x = req_config$params, n = pop_number) %>%
map_if(is.numeric, round) %>%
set_names(nm = req_config$requirements) %>%
as.data.frame() %>%
cbind(data.frame(funds = 100, overall_health = NA, id = paste0(letters, 1:nrow(.)), capit_funds = NA,
category = sample(x = c("Citizen", "Capitalist"), size = nrow(.), prob = c(.7, .3), replace = TRUE)),
sub_category = NA) %>%
dmap_if(is.factor, as.character) %>%
setDT
req_data[category == "Capitalist", capit_funds == 500]
req_data[, sub_category := ifelse(grepl("Capitalist", category), "Capitalist", "Labourer")]
---
req_data[category == "Capitalist", capit_funds := 500]
req_data[, sub_category := ifelse(grepl("Capitalist", category), "Capitalist", "Labourer")]
req_data <- invoke_map(.f = req_config$probDist, .x = req_config$params, n = pop_number) %>%
map_if(is.numeric, round) %>%
set_names(nm = req_config$requirements) %>%
as.data.frame() %>%
cbind(data.frame(funds = 100, overall_health = NA, id = paste0(letters, 1:nrow(.)), capit_funds = NA,
category = "Citizen,
sub_category = sample(x = c("Labourer", "Capitalist"), size = nrow(.), prob = c(.7, .3), replace = TRUE))) %>%
dmap_if(is.factor, as.character) %>%
setDT
req_data <- invoke_map(.f = req_config$probDist, .x = req_config$params, n = pop_number) %>%
map_if(is.numeric, round) %>%
set_names(nm = req_config$requirements) %>%
as.data.frame() %>%
cbind(data.frame(funds = 100, overall_health = NA, id = paste0(letters, 1:nrow(.)), capit_funds = NA,
category = "Citizen",
sub_category = sample(x = c("Labourer", "Capitalist"), size = nrow(.), prob = c(.7, .3), replace = TRUE))) %>%
dmap_if(is.factor, as.character) %>%
setDT
head(req_data)
req_data <- invoke_map(.f = req_config$probDist, .x = req_config$params, n = pop_number) %>%
map_if(is.numeric, round) %>%
set_names(nm = req_config$requirements) %>%
as.data.frame() %>%
cbind(data.frame(funds = 100, overall_health = NA, id = paste0(letters, 1:nrow(.)), category = "Citizen",
sub_category = sample(x = c("Labourer", "Capitalist"), size = nrow(.), prob = c(.7, .3), replace = TRUE))) %>%
dmap_if(is.factor, as.character) %>%
setDT
head(req_data)
library(purrr); library(dplyr); library(data.table)
## Step 1: Initialise a population, needs, wants, member categories/roles
pop_number <- 100
weeks_no <- 10
req_config <- rep(x = c("ess", "noness"), times = c(6, 4)) %>%     # Specifying needs and wants, repeating as many times as categories for each
paste(., letters[1:length(.)], sep = "_") %>%
as.data.frame() %>%
cbind("rnorm") %>%
set_names(x = ., nm = c("requirements", "probDist")) %>%
dmap_if(is.factor, as.character)
# Adding probability distribution function & params; keeping sd low to prevent values < 0
req_config$params <- list(list(mean = 30, sd = 1), list(mean = 20, sd = 4), list(mean = 40, sd = 7), list(mean = 10, sd = 1),
list(mean = 5, sd = 1), list(mean = 10, sd = 3), list(mean = 30, sd = 4), list(mean = 20, sd = 3),
list(mean = 10, sd = 2), list(mean = 5, sd = 1))
req_data <- invoke_map(.f = req_config$probDist, .x = req_config$params, n = pop_number) %>%
map_if(is.numeric, round) %>%
set_names(nm = req_config$requirements) %>%
as.data.frame() %>%
cbind(data.frame(funds = 100, overall_health = NA, id = paste0(letters, 1:nrow(.)), category = "Citizen",
sub_category = sample(x = c("Labourer", "Capitalist"), size = nrow(.), prob = c(.7, .3), replace = TRUE))) %>%
dmap_if(is.factor, as.character) %>%
setDT
pop_number <- 500
weeks_no <- 10
req_config <- rep(x = c("ess", "noness"), times = c(6, 4)) %>%     # Specifying needs and wants, repeating as many times as categories for each
paste(., letters[1:length(.)], sep = "_") %>%
as.data.frame() %>%
cbind("rnorm") %>%
set_names(x = ., nm = c("requirements", "probDist")) %>%
dmap_if(is.factor, as.character)
# Adding probability distribution function & params; keeping sd low to prevent values < 0
req_config$params <- list(list(mean = 30, sd = 1), list(mean = 20, sd = 4), list(mean = 40, sd = 7), list(mean = 10, sd = 1),
list(mean = 5, sd = 1), list(mean = 10, sd = 3), list(mean = 30, sd = 4), list(mean = 20, sd = 3),
list(mean = 10, sd = 2), list(mean = 5, sd = 1))
req_data <- invoke_map(.f = req_config$probDist, .x = req_config$params, n = pop_number) %>%
map_if(is.numeric, round) %>%
set_names(nm = req_config$requirements) %>%
as.data.frame() %>%
cbind(data.frame(funds = 100, overall_health = NA, id = paste0(letters, 1:nrow(.)), category = "Citizen",
sub_category = sample(x = c("Labourer", "Capitalist"), size = nrow(.), prob = c(.7, .3), replace = TRUE))) %>%
dmap_if(is.factor, as.character) %>%
setDT
req_data
reqData[, .N, by = sub_category]
req_Data[, .N, by = sub_category]
req_data[, .N, by = sub_category]
pop_number <- 500
weeks_no <- 10
lab_cap_prcnt <- c(.8, .2)
req_config <- rep(x = c("ess", "noness"), times = c(6, 4)) %>%     # Specifying needs and wants, repeating as many times as categories for each
paste(., letters[1:length(.)], sep = "_") %>%
as.data.frame() %>%
cbind("rnorm") %>%
set_names(x = ., nm = c("requirements", "probDist")) %>%
dmap_if(is.factor, as.character)
# Adding probability distribution function & params; keeping sd low to prevent values < 0
req_config$params <- list(list(mean = 30, sd = 1), list(mean = 20, sd = 4), list(mean = 40, sd = 7), list(mean = 10, sd = 1),
list(mean = 5, sd = 1), list(mean = 10, sd = 3), list(mean = 30, sd = 4), list(mean = 20, sd = 3),
list(mean = 10, sd = 2), list(mean = 5, sd = 1))
req_data <- invoke_map(.f = req_config$probDist, .x = req_config$params, n = pop_number) %>%
map_if(is.numeric, round) %>%
set_names(nm = req_config$requirements) %>%
as.data.frame() %>%
cbind(data.frame(funds = 100, overall_health = NA, id = paste0(letters, 1:nrow(.)), category = "Citizen",
sub_category = sample(x = c("Labourer", "Capitalist"), size = nrow(.), prob = lab_cap_prcnt, replace = TRUE))) %>%
dmap_if(is.factor, as.character) %>%
setDT
req_data[, .N, by = sub_category]
pop_number <- 500
weeks_no <- 10
lab_cap_prcnt <- c(.85, .15)
req_config <- rep(x = c("ess", "noness"), times = c(6, 4)) %>%     # Specifying needs and wants, repeating as many times as categories for each
paste(., letters[1:length(.)], sep = "_") %>%
as.data.frame() %>%
cbind("rnorm") %>%
set_names(x = ., nm = c("requirements", "probDist")) %>%
dmap_if(is.factor, as.character)
# Adding probability distribution function & params; keeping sd low to prevent values < 0
req_config$params <- list(list(mean = 30, sd = 1), list(mean = 20, sd = 4), list(mean = 40, sd = 7), list(mean = 10, sd = 1),
list(mean = 5, sd = 1), list(mean = 10, sd = 3), list(mean = 30, sd = 4), list(mean = 20, sd = 3),
list(mean = 10, sd = 2), list(mean = 5, sd = 1))
req_data <- invoke_map(.f = req_config$probDist, .x = req_config$params, n = pop_number) %>%
map_if(is.numeric, round) %>%
set_names(nm = req_config$requirements) %>%
as.data.frame() %>%
cbind(data.frame(funds = 100, overall_health = NA, id = paste0(letters, 1:nrow(.)), category = "Citizen",
sub_category = sample(x = c("Labourer", "Capitalist"), size = nrow(.), prob = lab_cap_prcnt, replace = TRUE))) %>%
dmap_if(is.factor, as.character) %>%
setDT
req_data[, .N, by = sub_category]
?seq_along
seq_along(Letters[1:10])
seq_along(letters[1:10])
paste("company", seq_along(req_data[sub_category == "Capitalist", sub_category), sep = "_")
paste("company", seq_along(req_data[sub_category == "Capitalist", sub_category]), sep = "_")
pop_number <- 500
weeks_no <- 10
lab_cap_prcnt <- c(.9, .1)
req_config <- rep(x = c("ess", "noness"), times = c(6, 4)) %>%     # Specifying needs and wants, repeating as many times as categories for each
paste(., letters[1:length(.)], sep = "_") %>%
as.data.frame() %>%
cbind("rnorm") %>%
set_names(x = ., nm = c("requirements", "probDist")) %>%
dmap_if(is.factor, as.character)
# Adding probability distribution function & params; keeping sd low to prevent values < 0
req_config$params <- list(list(mean = 30, sd = 1), list(mean = 20, sd = 4), list(mean = 40, sd = 7), list(mean = 10, sd = 1),
list(mean = 5, sd = 1), list(mean = 10, sd = 3), list(mean = 30, sd = 4), list(mean = 20, sd = 3),
list(mean = 10, sd = 2), list(mean = 5, sd = 1))
req_data <- invoke_map(.f = req_config$probDist, .x = req_config$params, n = pop_number) %>%
map_if(is.numeric, round) %>%
set_names(nm = req_config$requirements) %>%
as.data.frame() %>%
cbind(data.frame(funds = 100, overall_health = NA, id = paste0(letters, 1:nrow(.)), category = "Citizen",
sub_category = sample(x = c("Labourer", "Capitalist"), size = nrow(.), prob = lab_cap_prcnt, replace = TRUE))) %>%
dmap_if(is.factor, as.character) %>%
setDT
req_data[, .N, by = sub_category]
req_data[sub_category == "Capitalist", seq_along(sub_category)]
paste("company", req_data[sub_category == "Capitalist", seq_along(sub_category)], sep = "_")
data.frame(company_name = paste("company", req_data[sub_category == "Capitalist", seq_along(sub_category)], sep = "_"),
market_sector = sample(x = c("Supermarket", "Furniture", "Electronics", "Automobile", "Leisure"), size = nrow(.),
prob =sector_prob))
sector_prob <- c(.4, .2, .2, .1, .1)
data.frame(company_name = paste("company", req_data[sub_category == "Capitalist", seq_along(sub_category)], sep = "_"),
market_sector = sample(x = c("Supermarket", "Furniture", "Electronics", "Automobile", "Leisure"), size = nrow(.),
prob =sector_prob))
data.frame(company_name = paste("company", req_data[sub_category == "Capitalist", seq_along(sub_category)], sep = "_"),
market_sector = sample(x = c("Supermarket", "Furniture", "Electronics", "Automobile", "Leisure"),
size = req_data[sub_category == "Capitalist", .N], prob =sector_prob))
data.frame(company_name = paste("company", req_data[sub_category == "Capitalist", seq_along(sub_category)], sep = "_"),
market_sector = sample(x = c("Supermarket", "Furniture", "Electronics", "Automobile", "Leisure"),
size = req_data[sub_category == "Capitalist", .N], prob =sector_prob, replace = TRUE))
?sample
sample(x = sector_names, size = req_data[sub_category == "Capitalist", .N], prob =sector_prob, replace = TRUE) %>% str
sector_names <- c("Supermarket", "Furniture", "Electronics", "Automobile", "Leisure")            # this and sector_prob should have equal lengths
sample(x = sector_names, size = req_data[sub_category == "Capitalist", .N], prob =sector_prob, replace = TRUE) %>% str
sample(x = sector_names, size = req_data[sub_category == "Capitalist", .N], prob =sector_prob, replace = TRUE) %>% summary
sample(x = sector_names, size = req_data[sub_category == "Capitalist", .N], prob =sector_prob, replace = TRUE) %>% str
sample(x = sector_names, size = req_data[sub_category == "Capitalist", .N], prob =sector_prob, replace = TRUE) %>% split(x = ., f = unique(.))
req_data[sub_category == "Capitalist"] %>%
mutate(sector = sample(sector_names, prob = sector_prob, replace = TRUE)) %>% str
?transmute
req_data[sub_category == "Capitalist"] %>%
mutate(sector = factor(sample(sector_names, prob = sector_prob, replace = TRUE))) %>% str
req_data[sub_category == "Capitalist"] %>%
mutate(sector = factor(sample(sector_names, prob = sector_prob, replace = TRUE))) %>% a1
req_data[sub_category == "Capitalist"] %>%
mutate(sector = factor(sample(sector_names, size = nrow(.), prob = sector_prob, replace = TRUE))) %>%
str
?split
req_data[sub_category == "Capitalist"] %>%
mutate(sector = factor(sample(sector_names, size = nrow(.), prob = sector_prob, replace = TRUE))) %>%
split(x = ., f = sector) %>% str
g <- factor(round(n * runif(n * nn)))
x <- rnorm(n * nn) + sqrt(as.numeric(g))
split(x, g)
n <- 10; nn <- 100
g <- factor(round(n * runif(n * nn)))
x <- rnorm(n * nn) + sqrt(as.numeric(g))
split(x, g)
str(x)
str(g)
unsplit(lapply(split(x, g), scale), g) %>% str
lapply(split(x, g), scale) %>% str
req_data[sub_category == "Capitalist"] %>%
mutate(sector = factor(sample(sector_names, size = nrow(.), prob = sector_prob, replace = TRUE))) %>%
split(x = ., f = .$sector) %>%
str
req_data[sub_category == "Capitalist"] %>%
mutate(sector = factor(sample(sector_names, size = nrow(.), prob = sector_prob, replace = TRUE))) %>%
split(x = ., f = get(sector)) %>%
str
req_data[sub_category == "Capitalist"] %>%
mutate(sector = factor(sample(sector_names, size = nrow(.), prob = sector_prob, replace = TRUE))) %>%
split(x = ., f = eval(sector)) %>%
str
?eval
req_data[sub_category == "Capitalist"] %>%
mutate(sector = factor(sample(sector_names, size = nrow(.), prob = sector_prob, replace = TRUE))) %>%
split(x = ., f = .$sector) %>%
str
req_data[sub_category == "Capitalist", .(id, sub_category)] %>%
mutate(sector = factor(sample(sector_names, size = nrow(.), prob = sector_prob, replace = TRUE))) %>%
split(x = ., f = .$sector) %>% str
req_data[sub_category == "Capitalist", .(id, sub_category)] %>%
mutate(sector = factor(sample(sector_names, size = nrow(.), prob = sector_prob, replace = TRUE))) %>% str
req_data[sub_category == "Capitalist", .(id, sub_category)] %>%
mutate(sector = factor(sample(sector_names, size = nrow(.), prob = sector_prob, replace = TRUE))) %>%
split(x = ., f = .$sector, drop = TRUE) %>%  str
?relevel
req_data[sub_category == "Capitalist", .(id, sub_category)] %>%
mutate(sector = sample(sector_names, size = nrow(.), prob = sector_prob, replace = TRUE)) %>%
split(x = ., f = as.factor(.$sector)) %>% str
req_data[sub_category == "Capitalist", .(id, sub_category)] %>%
mutate(sector = sample(sector_names, size = nrow(.), prob = sector_prob, replace = TRUE)) %>%
split(x = ., f = as.factor(.$sector)) %>%
sort_by(.x = ., .f = sector_names) %>% str
?quote
quote(my_name)
get(sector_names)
eval(sector_names)
req_data[sub_category == "Capitalist", .(id, sub_category)] %>%
mutate(sector = sample(sector_names, size = nrow(.), prob = sector_prob, replace = TRUE)) %>%
split(x = ., f = as.factor(.$sector)) %>%
sort_by(.x = ., .f = "sector_names") %>% str
debug(sort_by)
req_data[sub_category == "Capitalist", .(id, sub_category)] %>%
mutate(sector = sample(sector_names, size = nrow(.), prob = sector_prob, replace = TRUE)) %>%
split(x = ., f = as.factor(.$sector)) %>%
sort_by(.x = ., .f = "sector_names") %>% str
req_data[sub_category == "Capitalist", .(id, sub_category)] %>%
mutate(sector = sample(sector_names, size = nrow(.), prob = sector_prob, replace = TRUE)) %>%
split(x = ., f = as.factor(.$sector)) %>%
sort_by(.x = ., .f = "sector_names") %>% str
req_data[sub_category == "Capitalist", .(id, sub_category)] %>%
mutate(sector = sample(sector_names, size = nrow(.), prob = sector_prob, replace = TRUE)) %>%
split(x = ., f = as.factor(.$sector)) %>%
sort_by(.x = ., .f = "sector_names") %>% str
req_data[sub_category == "Capitalist", .(id, sub_category)] %>%
mutate(sector = sample(sector_names, size = nrow(.), prob = sector_prob, replace = TRUE)) %>%
split(x = ., f = as.factor(.$sector)) %>%
sort_by(.x = ., .f = "sector_names") %>% str
?sort.list
req_data[sub_category == "Capitalist", .(id, sub_category)] %>%
mutate(sector = sample(sector_names, size = nrow(.), prob = sector_prob, replace = TRUE)) %>%
split(x = ., f = as.factor(.$sector)) %>%
order_by(.x = ., .f = "sector_names") %>% str
l1 <- transpose(list(x = sample(10), y = 1:10))
l1
l1 %>% order_by("x")
l1 %>% sort_by("x")
sector_names
req_data[sub_category == "Capitalist", .(id, sub_category)] %>%
mutate(sector = factor(sample(sector_names, size = nrow(.), prob = sector_prob, replace = TRUE), levels = sector_names, ordered = TRUE)) %>%
split(x = ., f = .$sector) %>% str
paste0("Company_", req_data[sub_category == "Capitalist", seq_along(id)])
req_data[sub_category == "Capitalist", .(id, sub_category)] %>%
mutate(sector = factor(sample(sector_names, size = nrow(.), prob = sector_prob, replace = TRUE), levels = sector_names, ordered = TRUE)) %>%
split(x = ., f = .$sector) %>%
str
req_data[sub_category == "Capitalist", .(id, sub_category)] %>%
mutate(sector = factor(sample(sector_names, size = nrow(.), prob = sector_prob, replace = TRUE), levels = sector_names, ordered = TRUE)) %>%
split(x = ., f = .$sector) %>% at_depth(2, c("id", "sector")) %>% str
req_data[sub_category == "Capitalist", .(id, sub_category)] %>%
mutate(sector = factor(sample(sector_names, size = nrow(.), prob = sector_prob, replace = TRUE), levels = sector_names, ordered = TRUE)) %>%
split(x = ., f = .$sector) %>% at_depth(2, c("id")) %>% str
req_data[sub_category == "Capitalist", .(id, sub_category)] %>%
mutate(sector = factor(sample(sector_names, size = nrow(.), prob = sector_prob, replace = TRUE), levels = sector_names, ordered = TRUE)) %>%
split(x = ., f = .$sector) %>% at_depth(1, c("id")) %>% str
req_data[sub_category == "Capitalist", .(id, sub_category)] %>%
mutate(sector = factor(sample(sector_names, size = nrow(.), prob = sector_prob, replace = TRUE), levels = sector_names, ordered = TRUE)) %>%
split(x = ., f = .$sector) %>% at_depth(1, c("id", "sector")) %>% str
data.frame(company_name = paste0("Company_", req_data[sub_category == "Capitalist", seq_along(id)]),
sector_names = sector_names) %>% str
data.frame(company_name = paste0("Company_", req_data[sub_category == "Capitalist", seq_along(id)]),
sector_names = sector_names, size = req_data[sub_category == "Capitalist", .N], prob =sector_prob, replace = TRUE)) %>%
data.frame(company_name = paste0("Company_", req_data[sub_category == "Capitalist", seq_along(id)]),
sector_names = sector_names, size = req_data[sub_category == "Capitalist", .N], prob =sector_prob, replace = TRUE) %>%
str
data.frame(company_name = paste0("Company_", req_data[sub_category == "Capitalist", seq_along(id)]),
sector_names = sample(x = sector_names, size = req_data[sub_category == "Capitalist", .N], prob =sector_prob, replace = TRUE)) %>%
str
data.frame(company_name = paste0("Company_", req_data[sub_category == "Capitalist", seq_along(id)]),
sector_names = sample(x = sector_names, size = req_data[sub_category == "Capitalist", .N], prob =sector_prob, replace = TRUE)) %>%
summary
req_data[sub_category == "Capitalist", .(id, sub_category)] %>%
mutate(sector = factor(sample(sector_names, size = nrow(.), prob = sector_prob, replace = TRUE), levels = sector_names, ordered = TRUE)) %>%
split(x = ., f = .$sector) %>% str
req_data[sub_category == "Capitalist", .(id, sub_category)] %>%
mutate(sector = factor(sample(sector_names, size = nrow(.), prob = sector_prob, replace = TRUE), levels = sector_names, ordered = TRUE)) %>%
arrange(sector_names) %>% str
req_data[sub_category == "Capitalist", .(id, sub_category)] %>%
mutate(sector = factor(sample(sector_names, size = nrow(.), prob = sector_prob, replace = TRUE), levels = sector_names, ordered = TRUE)) %>%
split(x = ., f = .$sector) %>% unsplit() %>% str
?unsplit
req_data[sub_category == "Capitalist", .(id, sub_category)] %>%
mutate(sector = factor(sample(sector_names, size = nrow(.), prob = sector_prob, replace = TRUE), levels = sector_names, ordered = TRUE)) %>%
split(x = ., f = .$sector) %>% unsplit(f = sector_names) %>% str
warnings()
req_data[sub_category == "Capitalist", .(id, sub_category)] %>%
mutate(sector = factor(sample(sector_names, size = nrow(.), prob = sector_prob, replace = TRUE), levels = sector_names, ordered = TRUE)) %>%
arrange(sector_names) %>% str
req_data[sub_category == "Capitalist", .(id, sub_category)] %>%
mutate(sector = factor(sample(sector_names, size = nrow(.), prob = sector_prob, replace = TRUE), levels = sector_names, ordered = TRUE)) %>%
arrange(sector_names) %>%
mutate(company_name = paste0("Company_", 1:nrow(.))) %>% str
req_data[sub_category == "Capitalist", .(id, sub_category)] %>%
mutate(sector = factor(sample(sector_names, size = nrow(.), prob = sector_prob, replace = TRUE), levels = sector_names, ordered = TRUE)) %>%
arrange(sector_names) %>%
mutate(company_name = paste0("Company_", 1:nrow(.))) %>% split_by("sector_names") %>% str
?split_by
req_config
class(req_config)
req_config[grepl("ess.+", req_config$requirements),]
grepl("ess.+", req_config$requirements)
req_config[grepl("^ess.+", req_config$requirements),]
req_config[grepl("^ess.+", req_config$requirements),"requirements"]
length(req_config[grepl("^ess.+", req_config$requirements),"requirements"])/2
1:nrow(req_config[grepl("^ess.+", req_config$requirements)])/2
1:nrow(req_config[grepl("^ess.+", req_config$requirements),])/2
(1:nrow(req_config[grepl("^ess.+", req_config$requirements),])/2
(1:nrow(req_config[grepl("^ess.+", req_config$requirements),]))/2
1:nrow(req_config[grepl("^ess.+", req_config$requirements),]
)
1:length(req_config[req_config[grepl("^ess.+", req_config$requirements),"requirements"]])/2
1:length(req_config[req_config[grepl("^ess.+", req_config$requirements),"requirements"]])
1:length(req_config[grepl("^ess.+", req_config$requirements),"requirements"])/2
req_config[grepl("^ess.+", req_config$requirements),"requirements"][1:length(req_config[grepl("^ess.+", req_config$requirements),"requirements"])/2]
req_config[grepl("^ess.+", req_config$requirements),"requirements"][1:round(length(req_config[grepl("^ess.+", req_config$requirements),"requirements"])/2)]
req_config
pop_number <- 500
weeks_no <- 10
total_ess_needs <- 6
total_noness_needs <- 4
lab_cap_prcnt <- c(.9, .1)
req_config <- rep(x = c("ess", "noness"), times = c(total_ess_needs, total_noness_needs)) %>%
paste(., letters[1:length(.)], sep = "_") %>%
as.data.frame() %>%
cbind("rnorm") %>%
set_names(x = ., nm = c("requirements", "probDist")) %>%
dmap_if(is.factor, as.character)
req_config
req_config[grepl("^ess.+", req_config$requirements),"requirements"][round(length(total_ess_needs)/2)]
round(length(total_ess_needs)/2)
length(total_ess_needs)
total_ess_needs
req_config[grepl("^ess.+", req_config$requirements),"requirements"][total_ess_needs/2)]
req_config[grepl("^ess.+", req_config$requirements),"requirements"][total_ess_needs/2]
list(req_config[grepl("^ess.+", req_config$requirements),"requirements"][1:total_ess_needs/2])
1:total_ess_needs/2
1:6
1:(total_ess_needs/2)
list(req_config[grepl("^ess.+", req_config$requirements),"requirements"][1:(total_ess_needs/2)])
list("a", "b")
as.list("a", "b")
as.list(c("a", "b")
)
market_data <- req_data[sub_category == "Capitalist", .(id, sub_category)] %>%
mutate(sector = factor(sample(sector_names, size = nrow(.), prob = sector_prob, replace = TRUE), levels = sector_names, ordered = TRUE)) %>%
arrange(sector_names) %>%
mutate(company_name = paste0("Company_", 1:nrow(.)))
market_data
head(market_data)
req_config <- rep(x = c("ess", "noness"), times = c(total_ess_needs, total_noness_needs)) %>%
paste(., letters[1:length(.)], sep = "_") %>%
as.data.frame() %>%
cbind("rnorm") %>%
set_names(x = ., nm = c("requirements", "probDist")) %>%
dmap_if(is.factor, as.character)
library(dplyr)
req_config <- rep(x = c("ess", "noness"), times = c(total_ess_needs, total_noness_needs)) %>%
paste(., letters[1:length(.)], sep = "_") %>%
as.data.frame() %>%
cbind("rnorm") %>%
set_names(x = ., nm = c("requirements", "probDist")) %>%
dmap_if(is.factor, as.character)
pop_number <- 500
weeks_no <- 10
total_ess_needs <- 6
total_noness_needs <- 4
lab_cap_prcnt <- c(.9, .1)
req_config <- rep(x = c("ess", "noness"), times = c(total_ess_needs, total_noness_needs)) %>%
paste(., letters[1:length(.)], sep = "_") %>%
as.data.frame() %>%
cbind("rnorm") %>%
set_names(x = ., nm = c("requirements", "probDist")) %>%
dmap_if(is.factor, as.character)
library(purrr)
pop_number <- 500
weeks_no <- 10
total_ess_needs <- 6
total_noness_needs <- 4
lab_cap_prcnt <- c(.9, .1)
req_config <- rep(x = c("ess", "noness"), times = c(total_ess_needs, total_noness_needs)) %>%
paste(., letters[1:length(.)], sep = "_") %>%
as.data.frame() %>%
cbind("rnorm") %>%
set_names(x = ., nm = c("requirements", "probDist")) %>%
dmap_if(is.factor, as.character)
req_config
setwd("C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck")
slidify("index.Rmd")
library(slidify)
library(slidifyLibraries)
slidify("index.Rmd")
slidify("index.Rmd")
?slidify
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
slidify(inputFile = "C:\\Users\\kazami\\Desktop\\Aimia\\Off-site\\Analytics off-site 2015 Q1\\impressjs_deck\\index.Rmd")
